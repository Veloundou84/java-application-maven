pipeline {
  agent any
  tools {
    maven "maven-vince"
    }
    stages {
      stage ('Maven Clean'){
        steps{
          sh 'mvn clean'
        }
      }
      stage ('Maven package') {
        steps{
          sh 'mvn package'
        }
      }
      stage ('Sonarqube analysis and testing'){
        steps{
          script{
            withSonarQubeEnv('sonarqubetoken'){
              sh 'mvn clean package sonar:sonar'
            }
          }
        }
      }
      
      stage ("Quality Gate") {
        steps {
          script {
             timeout(time: 1, unit: 'HOURS') {
          def qg = waitForQualityGate()
          if (qg.status != 'OK') {
               error "Pipeline aborted due to quality gate failure: ${qg.status}"
          }
             }
          }
        }
      }
      
      stage ('Docker build and push'){
             steps{
               withDockerRegistry([ credentialsId: "docker_evr", url: "https://index.docker.io/v1/"]){
                 sh 'docker build -t veloundou84/java-maven-jenkins . -f Dockerfile'
                 sh 'docker push veloundou84/java-maven-jenkins'
               }
             }
             }
             
             
             
             
              
    } 
}
